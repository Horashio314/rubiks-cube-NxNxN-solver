
- 444 HighLowEdges class does it actually do an IDA?
    I don't think it does I think it is just doing a binary_search_multiple() and then
    applying the steps found

- 444 first-four edges IDA, convert this to IDA-via-graph

- 444 centers stage move to IDA-via-graph

- 444 edges move to IDA-via-graph???
    - not sure how to do this given the size of the edges prune table

- 777 centers classes are solving centers, we only need to daisy the centers.
    This would allow us to conver these to IDA-via-graph. This is a significant
    change though...lots of tables to rebuild. It would be worth it though
    just to delete all of that code in ida_search.c and ida_777.c

- rm RubiksCube555ForNNN.py

- IDA speed
    I've noticed that the searches that use smaller PTs tend to run much much
    faster...I've seen as high as 80 million nodes-per-sec where some searches
    "only" do about 15 million nps.  I think it has to do with the smaller PT
    graphs being small enough to hold in the CPUs cache...or at least some
    significant chunk of them do.

    When we convert json to bin should we do so in a way so that nodes that are
    "near" each other in terms of moves are also near each other in the bin copy
    of the graph? This would basically be a matter of how we assign state_indexes.

    This is worth trying. Maybe it would be another significant speed jump that
    would open some more doors (like staging 555 centers in a single phase).

- IDA should be fast enough for tsai 555 now

    - the phase4 table has all 121,287,375 entries.  If we kept only up to depth-3 that would
      cut it to about 30 million and would be plenty deep. Or we start storing everything in
      an s3 bucket and stop worrying about large files. Honestly we could probably only keep
      up to depth-2 and that would be enough. Figure this out after the phase5 edges table
      has finished building.

    - pairing the last eight edges should be doable with IDA-via-graph.  Build a HighWingMidge
      table and a LowWingMidge table, I think each of those will be 8! or 40,320. The centers
      table should be 6 * 6 * 4900 = 176,400 states.

      There is some bug here I cannot figure out.  To troubleshoot it I am rebuilding the
      821 million entry "pair last eight edges" table.  Once that is done find the solution
      for the last 8 edges at the end of phase5 and feed that into IDA-via-graph and see
      what the two pt costs are. There is also something funky happening when I try to use
      the old way of solving, I see a ton of

        state_to_find QOqpPRYQryRP------------WWowXXZYxzZO, hash_raw 3819963987. hash_index 568559111, result is 0

      These should be pretty rare...maybe the hash algorithm has changed? This makes it pretty
      much impossible to use any HashCostOnly approach I think.

      delete without_LFRB and LookupTable555XPlaneYPlaneEdgesOrientPairOneEdge once you
      have this figured out.

- 666
    - The phase where we stage the UD centers (LR centers have already been done) should
      be moved to ida_search.c.
